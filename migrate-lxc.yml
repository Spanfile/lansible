- vars_prompt:
  - name: source_lxc
    prompt: Source LXC host
    private: no
  - name: target_lxc
    prompt: Target LXC host
    private: no
  - name: container_name
    prompt: Container name
    private: no

  hosts: localhost
  gather_facts: no

  tasks:
  # prepare source
  - delegate_to: '{{ source_lxc }}'
    become: yes
    block:
    - name: Check if container is running in source
      command: lxc-ls --filter={{ container_name }} -f -F state
      register: container_state
    - when: "'RUNNING' in container_state.stdout"
      block:
      - name: Stop container in source
        systemd:
          name: lxc@{{ container_name }}.service
          state: stopped
      - name: Wait for container to stop
        command: lxc-wait -n {{ container_name }} -s STOPPED

  # prepare target
  - delegate_to: '{{ target_lxc }}'
    become: yes
    block:
    - name: Create container directory structure in target
      file:
        path: /var/lib/lxc/{{ container_name }}
        state: directory
        mode: '0770'
    - name: Create container rootfs BTRFS subvolume in target
      command: btrfs subvolume create /var/lib/lxc/{{ container_name }}/rootfs
  
  # do the needful
  - name: Migrate container
    shell: ssh ansible@{{ source_lxc }} -o ForwardAgent=yes 'sudo tar -cf - -C /var/lib/lxc {{ container_name }} | ssh {{ target_lxc }} -o StrictHostKeyChecking=accept-new "sudo tar -xf - -C /var/lib/lxc"'

  # finalise target
  - delegate_to: '{{ target_lxc }}'
    become: yes
    block:
    - name: Run container in target if it was running in source
      systemd:
        name: lxc@{{ container_name }}.service
        state: started
      when: "'RUNNING' in container_state.stdout"
    - name: Enable container to run at boot in target
      systemd:
        name: lxc@{{ container_name }}.service
        enabled: yes
    - name: Enable container backup timer in target
      systemd:
        name: lxc-backup@{{ container_name }}.timer
        state: started
        enabled: yes

  # clean up source
  - delegate_to: '{{ source_lxc }}'
    become: yes
    block:
    - name: Disable container from running at boot in source
      systemd:
        name: lxc@{{ container_name }}.service
        enabled: no
    - name: Disable container backup in source
      systemd:
        name: lxc-backup@{{ container_name }}.timer
        state: stopped
        enabled: no
    - name: Destroy container in source
      command: lxc-destroy {{ container_name }}
