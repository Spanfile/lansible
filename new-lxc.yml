---
-
  hosts: localhost
  gather_facts: no
  vars_prompt:
  - name: lxc_host
    prompt: Target LXC host
    private: no
  - name: container_name
    prompt: Container name
    private: no
  - name: borg_passphrase
    prompt: Borg LXC backup encryption passphrase

  tasks:
  - block:
    - name: Clone base Fedora template
      command: lxc-copy -n base-fedora -N {{ container_name }} -s -B btrfs
    - name: Modify container configuration
      replace:
        path: /var/lib/lxc/{{ container_name }}/config
        regexp: 'base-fedora'
        replace: '{{ container_name }}'
    - name: Start container
      command: lxc-start {{ container_name }}
    - name: Wait for container to run
      command: lxc-wait -n {{ container_name }} -s RUNNING
    - name: Enable container to run at boot
      systemd:
        name: lxc@{{ container_name }}.service
        enabled: yes
    - name: Create container backup borg repository
      command: borg init --encryption repokey-blake2
      environment:
        BORG_RSH: ssh -i /home/lxc/.ssh/id_ed25519
        BORG_PASSPHRASE: '{{ borg_passphrase }}'
        BORG_REPO: lxc@cliff.lan:/borg/lxc/{{ container_name }}
    - name: Enable container backup
      systemd:
        name: lxc-backup@{{ container_name }}.timer
        state: started
        enabled: yes
    - name: Start initial backup
      systemd:
        name: lxc-backup@{{ container_name }}.service
        state: started
    - name: Get container IP address
      command: lxc-ls --filter={{ container_name }} -f -F IPV4
      register: ip_address
    - debug:
        var: ip_address['stdout_lines'][1]
    become: yes
    delegate_to: '{{ lxc_host }}'
